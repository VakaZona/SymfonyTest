{% extends "/base.html.twig" %}

{% block body %}
    <div class="w-4/5 m-auto text-center">
        <div class="py-12 border-b border-gray-200">
            <h1 class="text-6xl pt-12 pb-8">
                Movies Review
            </h1>

            <span class="font-light text-gray-500 italic">
                Hello user <p class="font-bold">{{ app.user ? app.user.email : '' }}</p>
            </span>
        </div>
    </div>
    <!--
    -->

    <!-- Тестовая разработка новой формы



    <div class="mx-auto w-4/5 my-8">
        <button
                onclick='openForm()'
                class="uppercase border border-gray-500 text-lg py-4 px-6 rounded transition transition-all bg-gray-800 text-white hover:bg-white hover:text-gray-800">
            Create New movie
        </button>
        <div id="form-wrap" class="hidden">

            <button
                    type="submit"
                    class="uppercase mt-15 bg-blue-500 text-gray-100 text-lg font-extrabold py-4 px-8 rounded-3xl">
                Submit Post
            </button><br>



            <button
                    onclick='closeForm()'
                    type="submit"
                    class="bg-red-500 font-bold py-2 px-4 ml-6 rounded transition-all hover:bg-red-300">
                Close
            </button>
        </div>

    </div>
    <script>
        const formWrap = document.getElementById('form-wrap'),
            formMovie = document.getElementsByName('movie_form')[0],
            apiMovies = '{{ path('app_movies_add') }}';

        console.log(formMovie)

        function submitForm(event) {
            event.preventDefault();
            let data = {
              'name': 'sads'
            };

            fetch(apiMovies, {
                method: 'POST', // or 'PUT'
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((response) => response.json())
                .then((data) => {
                    console.log('Success:', data.status);
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }

        formMovie.addEventListener('submit', submitForm);

        function openForm() {
            formWrap.classList.remove('hidden');
        }
        function closeForm(){
            formWrap.classList.add('hidden');
        }
    </script>

    -->
    {% if is_granted('ROLE_ADMIN') %}
    <!-- Code block starts -->
    <dh-component>
        <div class="w-full flex justify-center py-12 " id="button">
            <button class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700 mx-auto transition duration-150 ease-in-out hover:bg-indigo-600 bg-indigo-700 rounded text-white px-4 sm:px-8 py-2 text-xs sm:text-sm" onclick="modalHandler(true)">Create New Movie</button>
        </div>
        <div class="hidden py-12 bg-gray-700 transition duration-150 ease-in-out z-10 absolute top-0 right-0 bottom-0 left-0" id="modal">
            <div role="alert" class="container mx-auto w-11/12 md:w-2/3 max-w-lg">
                <div class="relative py-8 px-5 md:px-10 bg-white shadow-md rounded border border-gray-400">
                    <div class="w-full flex justify-start text-gray-600 mb-3">

                    </div>
                    <h1 class="text-gray-800 font-lg font-bold tracking-normal leading-tight mb-4">Create New Movie</h1>
                    {{ form_start(form) }}

                    {{ form_widget(form) }}
                    <div class="flex items-center justify-start w-full">
                        <button class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700 transition duration-150 ease-in-out hover:bg-indigo-600 bg-indigo-700 rounded text-white px-8 py-2 text-sm">Submit</button>
                        <button class="focus:outline-none focus:ring-2 focus:ring-offset-2  focus:ring-gray-400 ml-3 bg-gray-100 transition duration-150 text-gray-600 ease-in-out hover:border-gray-400 hover:bg-gray-300 border rounded px-8 py-2 text-sm" onclick="modalHandler()">Cancel</button>
                    </div>

                    {{ form_end(form) }}


                    <button class="cursor-pointer absolute top-0 right-0 mt-4 mr-5 text-gray-400 hover:text-gray-600 transition duration-150 ease-in-out rounded focus:ring-2 focus:outline-none focus:ring-gray-600" onclick="modalHandler()" aria-label="close modal" role="button">
                        <svg  xmlns="http://www.w3.org/2000/svg"  class="icon icon-tabler icon-tabler-x" width="20" height="20" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" />
                            <line x1="18" y1="6" x2="6" y2="18" />
                            <line x1="6" y1="6" x2="18" y2="18" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <script>
            let modal = document.getElementById("modal"),
                formMovie = document.getElementsByName('movie_form')[0],
                apiMovies = '{{ path('app_movies_add') }}';
            function modalHandler(val) {
                if (val) {
                    fadeIn(modal);
                    formMovie.addEventListener('submit', submitForm);
                } else {
                    fadeOut(modal);
                }

            }
            function submitForm(event) {
                event.preventDefault();
                const formData = new FormData(formMovie),
                    fileField = document.querySelector('input[type="file"]')

                formData.append('title', formData.get('movie_form[title]'))
                formData.append('release_year', formData.get('movie_form[releaseYear]'))
                formData.append('description', formData.get('movie_form[description]'))
                formData.append('image_path', fileField.files[0], fileField.files[0].name)

                fetch(apiMovies, {
                    method: 'POST',
                    body: formData,
                })
                    .then((response) => response.json())
                    .then((data) => {
                        console.log('Success:', data.status);
                        console.log(data);
                        const wrapper = document.getElementById('movies_container');
                        wrapper.innerHTML += data.html.content;
                        // wrapper.append(data.html.content)

                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            }
            function fadeOut(el) {
                el.style.opacity = 1;
                (function fade() {
                    if ((el.style.opacity -= 0.1) < 0) {
                        el.style.display = "none";
                    } else {
                        requestAnimationFrame(fade);
                    }
                })();
            }
            function fadeIn(el, display) {
                el.style.opacity = 0;
                el.style.display = display || "flex";
                (function fade() {
                    let val = parseFloat(el.style.opacity);
                    if (!((val += 0.2) > 1)) {
                        el.style.opacity = val;
                        requestAnimationFrame(fade);
                    }
                })();
            }
        </script>
    </dh-component>
    <!-- Code block ends -->
    {% endif %}

    <div id="movies_container" class="md:grid lg:grid-cols-3 gap-20 w-4/5 mx-auto py-15 ">
        <!-- Review Item -->
        {% for movie in movies %}
            {% include 'movies/movies.twig' with {'movie': movie} %}
        {% endfor %}


    </div>
{% endblock %}

